Version 0.8.5, 11/07/2002
	1. reinitializing GOS Array in the end of CETable call.
	2. fix the bug in GeneralizedMoments.
	3. fix a bug in RRRate1E and PIRate1E.
	4. correct the spelling in table.write_row (was raw)

Version 0.8.4, 09/26/2002
	1. the type of EN_RECORD.energy is changed to double, 
	   to avoid cancellations. this makes the data file incompartible 
	   with earlier version.
	2. change the lib. name of lapack, blas, minpack, quadpack, ode, 
	   mpfun, to avoid possible clash with system installations.
	   

Version 0.8.3, 09/25/2002
	1. implement Breit interaction in the 0 energy limit of the
	   exchanged photon.
	2. Vacuum polarization using Fullerton & Rinker's formula.
	3. Self-energy correction using Mohr and Mohr & Kim's table.
	4. Normal and specific mass shift. The square of kinetic energy 
	   terms is ignored.
	5. fix a bug in ConfigEnergy.
	
Version 0.8.2, 09/20/2002
	1. ConfigEnergy correction based on configurations.
	2. add RefineRadial function, maybe usefule for neutrals.
	3. fix a bug in RadialBound.
	4. fix a bug for lsode.
	
Version 0.8.1, 09/03/2002
	1. fix the unit bug for PhFit.
	2. add PICrossH and RRCrossH functions.
	3. add H approximation for very high n states, where the
	   wavefunction calculation is avoided completely. At present,
	   it only works for energy levels, E1 transitions and RR & PI 
	   cross sections.
	4. add the Mixing coefficients output to the BasisTable function.
	
Version 0.8.0, 08/30/2002
	1. add the ionization and recombinaiton fitting formula from
	   Verner and Mazzotta.
	
Version 0.7.9, 08/27/2002
	1. implement the generalized oscillator strength. and the first
	   Born approximaiton for excitation based on that. the
	   coefficients are output in the DB_CE file.
	2. fix a bug on the initialization of wavefunc.
	3. add the source rate blocks in the DB_RT file.
	
Version 0.7.8, 08/17/2002
	1. change the block size of various arrays, which fixes the malloc
	   bomb on Mac OS X.
	
Version 0.7.7, 08/14/2002
	1. fix a bug that causes the OptimizeRadial fails on neutral atoms.
	2. rewrite ConfigEnergy so that the average energy of
	   configuration groups instead of configurations are used 
	   for energy adjustments. It can now be called more than once
	   with the argument 0, and can have additional arguments, which
	   are lists of configuration groups. They are used for radial
	   optimization. 

Version 0.7.6, 08/10/2002
	1. add Makefiles to the demo dir.
	2. add the NL values for the valence electron in the 
	   structure output file.
	3. in atom.py, use only the ground configuration for 
	   the potential optimization for He-like ions.
	4. fix a bug in config.c, so that space in the brackets for
	   the configuration specification is allowed.
	
Version 0.7.5, 08/02/2002
	1. break down the long DATA statements in ionis.f
	2. fix the beam energy distribution in spm.py
	3. fix the High-Z element problem.
	4. fix the magnetic sublevel collisional excitation problem.
	5. rewrite the Dirac eq. solver for more robustness.
	6. add a function for relativistic H energy in const.py
	
Version 0.7.4, 07/10/2002
	1. write FAQ chapter of the manual.
	2. fix a bug introduced in atom.py
	3. improve CorrectEnergy.
	4. renormalization of superblock density removed.
	5. allow only AI and without DR.
	
Version 0.7.3, 05/15/2002
	1. improving the manual
	2. Use hydrogenic approximation for radiative transition rates
	   between n1 and n2 states when n1 and n2 >= n0, where n0 is
	   set by SetHydrogenicNL as for RR and PI.

Version 0.7.2, 05/08/2002
	1. add hydrogenic TRRate routine.
	2. update papers for submission to PRA.
	3. the r_core for H-like ions changed to 0.75*MAX_POINTS.
	4. update Makefile and setup.py for Mac OS X.
	5. separate TABLE class into pfac.table module.
	6. better initial estimate of binding energies for improved 
	   convergence.
	7. separate interpolation functions in pfac.util extension.
	8. making the fitting formula of RR and CI simpler. Do not fit
	   RR at low energies any more, since that's not valid for near
	   neutral ions.
	9. add 2-photon decay rates for 2s S_1/2 of H-like ions and
	   1s 2s S_0 of He-like ions in CRM.
	10.wrote draft version of the manual. change some of the 
	   internal structure of database files. the changes are not
	   compartible with earlier versions. 
	
Version 0.7.1, 03/11/2002
	1. add pfac.spm module for processing spectral data
	2. LevelName function added
	3. reimplement the output of spectra data to better distinguish
	   different type of transitions.
	4. make the coulomb-born contribution to collisional excitation
	   more robust.
	5. added Gaussian electron energy distribution to simulate EBIT
	   beam.
	6. improve the integration routine for rate coefficients.
	7. make the RateTable output more useful.
	8. improve the convergence of radial optimizer for near neutral
	   ions. It should now work even for neutral atoms.
	9. added TABLE class to spm module.
	10.AI channels with 2s hole need to be included.
	11.Update demo files for ConfigEnergy. and FeL dir.
	12.add RRRateH function.
	13.add RRC data in SpecTable
	14.fix a bug for H-like ions which gave wrong results for n>=11.
	15.put make macros in setup.py
	16.fix a bug on RR at Ne != 1E10.
	
Version 0.7.0, 02/06/2002
	1. add endian swapping in dbase.c and crm.c
	2. implement extrapolation on recombined states.
	3. using Seaton's method (MNRAS 119, 81) to extrapolate RR rates
	4. adding the ionization balance calculation of Arnaud&Raymond.
	5. fix a bug in the reinitialization of radial.c
	6. implement ConfigEnergy() to adjust the level energies.

Version 0.6.9, 01/20/2002
	1. improve the atom module.
	2. updated demo scripts for the new version. added the FeL 
	   demo scripts to calculate the FeL spectrum.
	3. changed the default QkMode for excitation to EXACT.
	4. added SetAbund routine to CRM.

Version 0.6.8, 01/14/2002
	1. use setup.py script to install the python interface. 
	   successfully built under Windows with Cygwin installed.
	2. implement binary output, and its conversion to ASCII format.
	3. changed the argument order of *Table routines, and the routine
	   Structure. The first argument of these routines are now always 
	   the output file name. The routine "LevelTable" is removed. 
	   The file name for the energy levels are now supplied to the 
	   routine "Structure" as the first argument. Several "Structure"
	   calls may share the same output file.
	4. implement ATOM class in "pfac.atom" module. wrote the function
	   "pfac.atom.atomic_data()" for systematic calculation of all
	   K-shell and L-shell processes.
	5. fix a bug in RR, which produced nonsence for n > 10, when
	   hydrogenic approximation is used for them.
	6. implement a collisional radiative model for the construction
	   of spectra. It is implemented in a separate python module 
	   "pfac.crm", and the corresponding simple interface "scrm".
	7. improved the fitting formula for collisonal excitation.
	   the original one fails in some cases. the current one seems
	   to be much better.

Version 0.6.7, 12/01/2001
	1. fix the bug in RR, which causes seg. fault.

Version 0.6.6, 11/06/2001
	1. Implement the non-python interface "sfac". Its input file
	   closely resembles the python scripts, without the flow 
	   control constructs. 
	2. the module "config" is now depricated. "config.config()" 
	   should be replaced with "fac.Config()". "config.closed()"
	   with "fac.Closed()", and "config.avgconfig()" with 
	   "fac.AvgConfig()". 
	
Version 0.6.5, 11/04/2001
	1. Implement the Binary-Encouter-Dipole model for ionization.
	2. Separate contributions from individual shells in the output
	   for photoionization and EII.
	3. Calculate the Bethe limit for EIE and EII, ensuring the correct
	   asymptotic behavior at high energies.

Version 0.6.4, 10/25/2001
	1. adding minpack routines. use an improved version of fitting
	   formula for PI cross sections.
	2. Increased the default radial grid points from 420 to 500. 
	   the original grid wasn't quite enough for RR onto high orbital
	   angular momentum states.
	3. implement hydrogenic approximtion of RR and PI cross sections
	   for high-n and high-L states. By default, states with n >= 6
	   are calculated in hydrogenic approximation. this can be changed
	   by SetHydrogenicNL(). 
	
Version 0.6.3, 10/22/2001
	1. allow the use of CBO approximation in the collisional
	   ionization calculation. 
	2. allow the specification of energy grid limits for automatic
	   construction via SetPEGridLimits(min, max) etc.
	3. fitting of EIE collision strength is abandoned, in favor of
	   interpolation, which is more reliable. 
	
Version 0.6.2, 10/19/2001
	1. the fitting of RR cross sections doesn't work quite well, 
	   changed back to interpolation.
	2. added routine to prepare and load ionization Qk tables.
	
Version 0.6.1, 10/13/2001
	1. change the default angz_cut t0 1E-3, which seem to be adequate
	   and makes the calculation much more efficient for large scale 
	   problems. added SetAngZCut and SetMixCut routines.
	2. allow multipole closed shells to be specified on one call to 
	   config.closed().
	3. add Makefile to python/
	
Version 0.6.0, 10/12/2001
	1. fix a bug in the construction of central potential, which
	   caused the potential at very large distances incorrect, this
	   bug did not affected the results.
	2. fix another occasional failur in the Dirac Solver.
	3. implemented the paramatric fitting of collision strength,
	   RR cross sections and ionization cross sections.

Version 0.5.9, 10/05/2001
	1. reimplemented the transition radial integrals to better 
	   distinguish relativistic and non-relativistic approx.
	2. the relativistic multipole integrals are now interpolated
	   from a range of transition energies, in stead of using the
	   average, which seems to be not enough for M1 transitions

Version 0.5.8, 10/04/2001
	1. really fixed the occasionall failur of radial solver.
	2. the output level names are simplified by 
	   dropping the closed shells.
	3. fix the M1 transition rates. which should almost always 
	   use the relativistic expression. 
	
Version 0.5.7, 10/03/2001
	1. fix a bug in solving the radial orbital for the energy
	   initialization.
	2. added the [s,p,d] notation in the configuration 
	   specification. ie., 3[s,p] means a shell of either 
	   3s or 3p, so is 3[0,1].
	
Version 0.5.6, 10/01/2001
	1. fix the bug on the interpolation of PI and RR radial integrals
	2. change the implementation of ionization, so that it is 
    	   possible to use precomputed tables.
	
Version	0.5.5, 9/24/2001,
	1. Create the Package "pfac". Start Logging

