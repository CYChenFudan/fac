# rcsid = $Id: README,v 1.25 2002/08/11 01:24:42 mfgu Exp $

FAC is a software packge for the calculation of various atomic processes.

Contents of the package:
README,      this file.
Makefile,    top level makefile.
setup.py,    setup script for the Python interface.
blas/,       BLAS routines in fortran.
coul/,       fortran routines related to coulomb functions.
demo/,       some demo scripts.
doc/,        reference guide for FAC
doc/papers/, papers describe the theoretical backgrounds.
faclib/,     core numerical library.
ionis/,      ionization balance calculation of Arnaud&Raymond.
lapack/,     fortran routines from LAPACK.
minpack/,    minpack optimization package.
quadpack/,   some routines from quadpack for quadrature.
mpfunc/,     multi-precision floating point arithmetic package by Beiley.
ode/,	     Livermoore Solve for odinary differential equations.
python/,     python interface.
sfac/,       non-python interface.
toms/,       some numerical routines from TOMS.

INSTALL:
There are two interfaces available to the FAC numerical lib. One makes use
of the Python scripting language, implemented as a package "pfac".
The other interface uses a simple command parser, compiled into executables. 
The two interfaces are independent. Either one or both can be installed.

Before installing, check the top level Makefile, and the setup script 
"setup.py" (for Python interface). Normally, only a few macro defined at 
the top of Makefile are OS dependent. Make appropriate changes according
to the comments. In "setup.py", the Fortran runtime library needs to be 
specified through the variable "fortranlib" (see "setup.py" for details).

Once these changes are made. 
To install "sfac" interface:
	make
	make install

To install "pfac" interface:
1. Obtain (From www.python.org) and install Python if it is not installed yet
   Version 2.0 or later is required. Make sure that python interpreter is 
   in your path.
2. run:
	python setup.py install

This will install the "pfac" package into the standard Python site-package 
path. If Python was installed as root, this requires the root permission as 
well. Alternatively, one may install the "pfac" package into a given directory
by running:
	python setup.py install --prefix=/my/own/dir

In order for python to find the installed "pfac" modules, one would have to 
define an environment variable PYTHONPATH to point to the directory 
"/my/own/dir/lib/python#.#/site-packages", where "#.#" is the Python version.
In cshell, this requires 
    setenv PYTHONPATH /my/own/dir/lib/python#.#/site-packages 
or in bash, 
    PYTHONPATH=/my/own/dir/lib/python#.#/site-packages;export PYTHONPATH

With python installed, the "sfac" interface can also be installed using
the setup.py script, to do so, run
	python setup.py sfac


Usage:
The modules can be called just like any python modules, either from the
interpreter interactively, or pass the script to python. 
e.g., python fe24_level.py.

The non-python interface produces two executables, "sfac" and "scrm", 
accepting input files as arguments. The syntax of the input file for 
both programs is identical, and is very similar to the Python syntax,
except for the missing of flow constrols.

Contact:
Bugs, and suggestions, please report to:
	mfgu@space.mit.edu
	Ming Feng Gu.
	Center for Space Research, MIT.

